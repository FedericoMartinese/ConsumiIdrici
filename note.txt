DOCUMENTAZIONE !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
- nei test mettere screen di marzo (giorni) dell'utente 2 per far vedere la differenza tra la prima metà del mese in cui si hanno dati regolari e la seconda metà in cui mancano.
controllare nel csv che sia effettivamente così
- nei test mettere 22/06/15 dell'utente 11 e confrontarlo con i dati (file 11_all.csv). far vedere il saltello all'una di notte, la costanza dalle 4 alle 18, la differenza delle 18 perché il dato è delle 18:45, lo zero da lì in poi)

cose da dire nella documentazione:
- eccezioni: controllato, sono gestite bene
- considerazioni su settimane/mesi compresi parzialmente (tab interrogazione). valori controllari vanno bene, spiegare bene il sistema nella documentazione
- è tutto const correctness
- il gethistogramdata funziona per step costanti. il month_by_week non ha step costante (andando non ogni 7 giorni ma da lunedì a domenica possono esserci settimane incomplete).
	viene chiamato con uno step di 1 giorno e il cliente si somma i consumi giornalieri come preferice (fatto metterlo nella documentazione)
- mettere nella documentazione le prove col set del progetto set_test_myclass (in documenti/qt) ????
- nell'updateanalysistab sono tenuti 3 cicli distinti per semplicitià, perché si riferiscono a due tabelle diverse e perché comunque quello extra non è dispendioso (vedere se dirlo nella documentazione)
- spiegare che per le utenze devianti il periodo di riferimento è tutto l'anno, quindi non ha senso indicarlo e non ha senso dire consumo mensile/settimanale/giornaliero perché sullo stesso periodo sono semplicemente multipli (se un utente ha un consumo giornaliero triplo rispetto alla media, ha anche un consumo mensile/settimanale triplo rispetto alla media mensile/settimanale). nella tabella comunque mostro tutti e tre i consumi
- spiegare proporzione getConsAtDate
- come esempio per i controlli sulla insert mettere questo (utente 16), vedi ore 21
"2015-05-28 18:00:00",44.736,16
"2015-05-28 19:00:00",44.739,16
"2015-05-28 20:00:00",45.099,16
"2015-05-28 21:00:00",44.739,16
"2015-05-28 22:00:00",45.099,16
"2015-05-28 23:00:00",45.099,16

e questo
"2015-06-10 20:00:00",54.893,16
"2015-06-10 21:00:00",54.535,16
"2015-06-10 22:00:00",54.893,16

"2015-06-18 20:00:00",57.356,16
"2015-06-18 21:00:00",56.988,16
"2015-06-18 22:00:00",57.356,16

"2015-06-25 20:00:00",62.356,16
"2015-06-25 21:00:00",61.995,16
"2015-06-25 22:00:00",62.356,16

"2015-06-30 20:00:00",66.695,16
"2015-06-30 21:00:00",66.341,16
"2015-06-30 22:00:00",66.695,16

curiosamente tutti alle 21

"2015-02-04 08:25:00",23.445,112
"2015-02-04 08:28:00",9.726,112

"2015-04-09 09:00:00",20.331,206
"2015-04-09 04:00:00",38.992,176
"2015-04-09 10:00:00",20.330,206

da fare:
- sistemare valori piccolissimi nel grafico

- sistemare tab interrogazione i valori nd (vedi settimanale) oppure lasciare così e spiegare benissimo nella documentazione

- controllare il passaggio della std::map dalla funzione read (visto che è grossa c'è un metodo migliore?)

- controllare tick verticali in vari casi

- controllare valori dei grafici 
 
 - controllare giorni cambio ora
 
 - guardare l'utente NULL il 7 e l'8 luglio

- utilizzare tipo apposito per variabili che contengono size di set/vector (se quei valori vengono memorizzati)  (size_t)

- controllare 21/03/15 dell'utente 11. consumi orari strani (tutti uguali)

- provare a sostituire l'editing finished delle due caselle clientID con un evento più in tempo reale

- tutte le qstring a std::string

- cambiare la lettura da file da qt a quella normale del c++?

- utente 319 e 323 consumi strani ad agosto (threshold > 15 e si vedono)
- utente 191 DATI SBAGLIATI
- controllare che non vengano aggiunti elementi vuoti alla mappa qstring-clientconsumptions


eccezioni nel costruttore e liste di inizializzazione
http://stackoverflow.com/questions/810839/throwing-exceptions-from-constructors

- scaricare ultima versione dei csv da beep e fare un winmerge per vedere se è cambiato qualcosa

- fare un controllo generale di tutto il programma