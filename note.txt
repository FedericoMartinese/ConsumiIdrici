- suddividere il consumo equamente tra le ore in caso di "buchi" nel file di input (stessa cosa per più registrazioni nell'arco di un'ora)

- clustering nell'analisi dei consumi

- controllare l'organizzazine in classi delle funzioni (in particolare datautility)

- ricontrollare TUTTI i commenti, tradurli in inglese (?) e metterli dove servono

- considerazioni su settimane/mesi compresi parzialmente (tab interrogazione)

- segmentation fault sulla dichiarazione dei record (forse risolto)

- controllare tick verticali in vari casi

- controllare valori dei grafici

- aggiungere un panel con i valori massimi, minimi e medi

- maschera con barra di caricamento per l'apertura del file

- sostituire tutti i qdatetime.secsto con i < > e verificarne il funzionamento

- testare quanto è conveniente ordinare e usare la sorted rispetto a non ordinare e usare solo la getconsatdate
 
 - controllare il calcolo del caso più difficile della getconsatdatesorted (modificando file magari)
 
 - controllare giorni cambio ora
 
 - guardare l'utente NULL il 7 e l'8 luglio

- controllare variabili test (ce n'è nella costruzione dei dati del grafico gethistogramdata)

- unire la getperiodsorted e la getconssorted (verificare che servano entrambe!!!)

- utilizzare tipo apposito per variabili che contengono size di vector (se quei valori vengono memorizzati)  (size_t)

- in ogni costruttore qdatetime passare il parametro Qt::TimeSpec::UTC

- const correctness

- spostare verifiche correttezza file dalla readFile al posto giusto (come/dove??? eccezione nel costruttore di clientconsumptions??)

- eliminare operatori inutili/non usati

- il gethistogramdata funziona per step costanti. il month_by_week non ha step costante (andando non ogni 7 giorni ma da lunedì a domenica possono esserci settimane incomplete).
	viene chiamato con uno step di 1 giorno e il cliente si somma i consumi giornalieri come preferice (fatto metterlo nella documentazione)

- mettere nella documentazione le prove col set del progetto set_test_myclass (in documenti/qt)

- mettere typedef per i tipi lunghissimi del set? (set in sé e iterato) non serve più?

- controllare 21/03/15 dell'utente 11. consumi orari strani (tutti uguali)

- sistemare tabella consumi notturni (larghezza colonne, crash se si cambia utente e si scorre)		RISOLTO

- nomi classi iniziale maiuscola

- provare a sostituire l'editing finished delle due caselle clientID e della threshold_spinbox con un evento più in tempo reale. per i primi due dovrebbe essere abbastanza veloce da poterlo fare

- tutte le qstring a std::string
- nuovo tipo per i datetime
- cambiare la lettura da file da qt a quella normale del c++?

- utente 319 e 323 consumi strani ad agosto (threshold > 15 e si vedono)
- utente 191 DATI SBAGLIATI
- controllare che non vengano aggiunti elementi vuoti alla mappa qstring-clientconsumptions

togliere funzione avgdaysinmonth

- incoerenza nomi asse verticale/combobox dei tipi di consumi nel grafico

eccezioni nel costruttore e liste di inizializzazione
http://stackoverflow.com/questions/810839/throwing-exceptions-from-constructors

- controllare grafico utente 191 (assi da 0 a 0)